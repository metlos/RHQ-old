<?xml version="1.0" encoding="UTF-8"?>

<project name="rhq-client" basedir=".">

   <property name="output.dir" location="${basedir}/target/${project.artifactId}-${project.version}" />
   <property name="bin.home" location="${output.dir}/bin" />
   <property name="cli.home" location="${output.dir}/cli" />
   <property name="conf.home" location="${output.dir}/conf" />
   <property name="jboss.home" location="${basedir}/target/jboss-${jboss.version}" />
   <property name="lib.home" location="${output.dir}/lib" />
   <property name="samples.home" location="${output.dir}/samples"/>

   <target name="prepare-dist">
      <condition property="exclude.cli.jar" value="true">
         <equals arg1="${rhq.client.build.exclude.cli.jar}" arg2="true" />
      </condition>
      <condition property="include.client.jar" value="true">
         <equals arg1="${rhq.client.build.include.client.jar}" arg2="true" />
      </condition>

      <antcall target="prepare-bin-dir" />
      <antcall target="prepare-conf-dir" />
      <antcall target="prepare-lib-dir" />
      <antcall target="prepare-samples-dir" />
   </target>

   <target name="prepare-bin-dir">
      <echo>*** Populating bin scripts...</echo>
      <copy verbose="true" toDir="${bin.home}">
         <fileset dir="${basedir}/src/etc/" includes="rhq-cli*.*" />
      </copy>
      <chmod dir="${bin.home}" perm="ug+rx" includes="*.sh" />
   </target>

   <target name="prepare-conf-dir">
      <echo>*** Creating conf dir...</echo>
      <mkdir dir="${conf.home}" />
      <echo>*** Populating conf files...</echo>
      <copy verbose="true" toDir="${conf.home}">
         <fileset dir="${basedir}/src/main/resources/" includes="*.*" />
      </copy>
   </target>

   <target name="prepare-lib-dir">
      <echo>*** Creating lib dir...</echo>
      <mkdir dir="${lib.home}" />
      <mkdir dir="${lib.home}/endorsed" />

      <echo>*** Populating lib dir...</echo>
      <copy file="${settings.localRepository}/commons-logging/commons-logging/${commons-logging.version}/commons-logging-${commons-logging.version}.jar" tofile="${lib.home}/commons-logging-${commons-logging.version}.jar" verbose="true" />
      <copy file="${settings.localRepository}/gnu-getopt/getopt/${getopt.version}/getopt-${getopt.version}.jar" tofile="${lib.home}/getopt-${getopt.version}.jar" verbose="true" />
      <copy file="${settings.localRepository}/i18nlog/i18nlog/${i18nlog.version}/i18nlog-${i18nlog.version}.jar" tofile="${lib.home}/i18nlog-${i18nlog.version}.jar" verbose="true" />
      <copy file="${settings.localRepository}/jline/jline/${jline.version}/jline-${jline.version}.jar" tofile="${lib.home}/jline-${jline.version}.jar" verbose="true" />
      <copy file="${settings.localRepository}/log4j/log4j/${log4j.version}/log4j-${log4j.version}.jar" tofile="${lib.home}/log4j-${log4j.version}.jar" verbose="true" />
      <copy file="${settings.localRepository}/org/rhq/rhq-remoting-client-api/${project.version}/rhq-remoting-client-api-${project.version}.jar" todir="${lib.home}" verbose="true" />
      <copy file="${settings.localRepository}/org/rhq/rhq-core-domain/${project.version}/rhq-core-domain-${project.version}.jar" tofile="${lib.home}/rhq-core-domain-${project.version}.jar" verbose="true" />
      <copy file="${settings.localRepository}/org/rhq/rhq-core-util/${project.version}/rhq-core-util-${project.version}.jar" tofile="${lib.home}/rhq-core-util-${project.version}.jar" verbose="true" />
      <copy file="${settings.localRepository}/org/rhq/rhq-enterprise-server/${project.version}/rhq-enterprise-server-${project.version}-client.jar" tofile="${lib.home}/rhq-enterprise-server-${project.version}-client.jar" verbose="true" />
      <copy file="${settings.localRepository}/org/rhq/rhq-enterprise-comm/${project.version}/rhq-enterprise-comm-${project.version}.jar" tofile="${lib.home}/rhq-enterprise-comm-${project.version}.jar" verbose="true" />
      <copy file="${settings.localRepository}/jboss/jboss-common/${jboss-common.version}/jboss-common-${jboss-common.version}.jar" tofile="${lib.home}/jboss-common-${jboss-common.version}.jar" verbose="true" />
      <copy file="${settings.localRepository}/jboss/jboss-remoting/${jboss-remoting.version}/jboss-remoting-${jboss-remoting.version}.jar" tofile="${lib.home}/jboss-remoting-${jboss-remoting.version}.jar" verbose="true" />
      <copy file="${settings.localRepository}/jboss/javassist/${jboss-javassist.version}/javassist-${jboss-javassist.version}.jar" tofile="${lib.home}/javassist-${jboss-javassist.version}.jar" verbose="true" />
      <copy file="${settings.localRepository}/oswego-concurrent/concurrent/${concurrent.version}/concurrent-${concurrent.version}.jar" tofile="${lib.home}/concurrent-${concurrent.version}.jar" verbose="true" />
      <!-- TODO: This can probaby go away after we stop using EJB classes as Exceptions in the RemoteAPI -->
      <copy file="${settings.localRepository}/javax/persistence/persistence-api/${persistence-api.version}/persistence-api-${persistence-api.version}.jar" tofile="${lib.home}/persistence-api-${persistence-api.version}.jar" verbose="true" />
      <copy file="${basedir}/target/${project.artifactId}-${project.version}.jar" tofile="${lib.home}/${project.artifactId}-${project.version}.jar" verbose="true" />
      <copy file="${settings.localRepository}/net/sf/opencsv/opencsv/${opencsv.version}/opencsv-${opencsv.version}.jar" tofile="${lib.home}/opencsv-${opencsv.version}.jar" verbose="true" />
      <copy file="${settings.localRepository}/org/testng/testng/${testng.version}/testng-${testng.version}.jar" tofile="${lib.home}/testng-${testng.version}.jar" verbose="true" />
   	  <copy file="${settings.localRepository}/org/rhq/rhq-script-bindings/${project.version}/rhq-script-bindings-${project.version}.jar" tofile="${lib.home}/rhq-script-bindings-${project.version}.jar" verbose="true" />
   	  <copy file="${settings.localRepository}/hibernate-annotations/hibernate-annotations/${hibernate-annotations.version}/hibernate-annotations-${hibernate-annotations.version}.jar" todir="${lib.home}" verbose="true" />
      <copy file="${settings.localRepository}/org/python/jython-standalone/${jython.version}/jython-standalone-${jython.version}.jar" tofile="${lib.home}/jython-standalone-${jython.version}.jar" verbose="true" />
   </target>

   <target name="prepare-samples-dir">
      <echo>*** Creating samples dir...</echo>
      <mkdir dir="${samples.home}" />
      <echo>*** Populating sample scripts...</echo>
      <copy verbose="true" toDir="${samples.home}">
         <fileset dir="${basedir}/src/main/samples/" includes="*.*" />
      </copy>
   </target>

</project>

