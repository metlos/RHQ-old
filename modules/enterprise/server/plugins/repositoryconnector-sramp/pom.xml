<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>rhq-enterprise-server-plugins-parent</artifactId>
        <groupId>org.rhq</groupId>
        <version>4.8.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>rhq-serverplugin-repositoryconnector-sramp</artifactId>

    <name>RHQ Enterprise Server S-RAMP Repository Connector Plugin</name>

    <properties>
        <sramp.version>0.1.2-SNAPSHOT</sramp.version>
        <org.modeshape.version>3.2.0.Final</org.modeshape.version>
        <org.jboss.resteasy.version>2.3.5.Final</org.jboss.resteasy.version>
        <infinispan.version>5.2.5.Final</infinispan.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.overlord.sramp</groupId>
            <artifactId>s-ramp-client</artifactId>
            <version>${sramp.version}</version>
        </dependency>
        <dependency>
            <groupId>org.overlord.sramp</groupId>
            <artifactId>s-ramp-common</artifactId>
            <version>${sramp.version}</version>
        </dependency>

        <!-- Test deps -->
        <dependency>
            <groupId>org.overlord.sramp</groupId>
            <artifactId>s-ramp-client</artifactId>
            <version>${sramp.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.overlord.sramp</groupId>
            <artifactId>s-ramp-common</artifactId>
            <version>${sramp.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.overlord.sramp</groupId>
            <artifactId>s-ramp-server</artifactId>
            <version>${sramp.version}</version>
            <classifier>classes</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
            <version>${org.modeshape.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-jcr</artifactId>
            <version>${org.modeshape.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.overlord.sramp</groupId>
            <artifactId>s-ramp-repository-jcr-modeshape</artifactId>
            <version>${sramp.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>tjws</artifactId>
            <version>${org.jboss.resteasy.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
            <version>${infinispan.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludedGroups>${rhq.testng.excludedGroups}</excludedGroups>
                    <!--
                       <argLine>${jacoco.unit-test.args} -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=y</argLine>
                    -->
                </configuration>
            </plugin>

            <plugin>
                <!-- We need to copy over the S-RAMP client libs and their deps not present in our container (AS7) -->
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-rhq-plugins</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.overlord.sramp</groupId>
                                    <artifactId>s-ramp-client</artifactId>
                                    <version>${sramp.version}</version>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.overlord.sramp</groupId>
                                    <artifactId>s-ramp-api</artifactId>
                                    <version>${sramp.version}</version>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.overlord.sramp</groupId>
                                    <artifactId>s-ramp-common</artifactId>
                                    <version>${sramp.version}</version>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.overlord.sramp</groupId>
                                    <artifactId>s-ramp-atom</artifactId>
                                    <version>${sramp.version}</version>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.apache.commons</groupId>
                                    <artifactId>commons-compress</artifactId>
                                    <version>1.4.1</version>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.tukaani</groupId>
                                    <artifactId>xz</artifactId>
                                    <version>1.0</version>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${project.build.outputDirectory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <profiles>

        <profile>
            <id>dev</id>

            <properties>
                <rhq.rootDir>../../../../..</rhq.rootDir>
                <rhq.containerDir>${rhq.rootDir}/${rhq.defaultDevContainerPath}</rhq.containerDir>
                <rhq.deploymentDir>${rhq.containerDir}/${rhq.serverPluginDir}
                </rhq.deploymentDir>
            </properties>

            <build>
                <plugins>

                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>

                            <execution>
                                <id>deploy</id>
                                <phase>compile</phase>
                                <configuration>
                                    <target>
                                        <mkdir dir="${rhq.deploymentDir}"/>
                                        <property name="deployment.file"
                                                  location="${rhq.deploymentDir}/${project.build.finalName}.jar"/>
                                        <echo>*** Updating ${deployment.file}...</echo>
                                        <jar destfile="${deployment.file}" basedir="${project.build.outputDirectory}"/>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>

                            <execution>
                                <id>undeploy</id>
                                <phase>clean</phase>
                                <configuration>
                                    <target>
                                        <property name="deployment.file"
                                                  location="${rhq.deploymentDir}/${project.build.finalName}.jar"/>
                                        <echo>*** Deleting ${deployment.file}...</echo>
                                        <delete file="${deployment.file}"/>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>

                            <execution>
                                <id>deploy-jar-meta-inf</id>
                                <phase>package</phase>
                                <configuration>
                                    <target>
                                        <property name="deployment.file"
                                                  location="${rhq.deploymentDir}/${project.build.finalName}.jar"/>
                                        <echo>*** Updating META-INF dir
                                            in ${deployment.file}...
                                        </echo>
                                        <unjar src="${project.build.directory}/${project.build.finalName}.jar"
                                               dest="${project.build.outputDirectory}">
                                            <patternset>
                                                <include name="META-INF/**"/>
                                            </patternset>
                                        </unjar>
                                        <jar destfile="${deployment.file}"
                                             manifest="${project.build.outputDirectory}/META-INF/MANIFEST.MF"
                                             update="true">
                                        </jar>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>
    </profiles>
</project>
